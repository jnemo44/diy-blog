import Head from 'next/head'
import Link from 'next/link'
import { getAllPosts } from '../lib/data'
import { updateStravaTokens } from '../lib/stravaUtils'

export default function Home({ posts, stravaStats }) {
  const run_total_miles = Math.round(stravaStats.all_run_totals.distance * 0.000621371)
  const run_total_elevation = Math.round(stravaStats.all_run_totals.elevation_gain * 3.28084)
  const earth_percent_complete = (run_total_miles / 24901 * 100).toFixed(2)
  const earth_miles_to_go = (24901 - run_total_miles).toLocaleString('en-US')
  const run_total_time = Math.round(stravaStats.all_run_totals.moving_time / 3600)

  // Organize posts by most recent
  posts.sort((a, b) => {
    return (new Date(b.date) - new Date(a.date))
  })

  return (
    <div className='font-Poppins'>
      <Head>
        <title>{"Joe's Blog"}</title>
        {/* <meta name="description" content="Generated by create next app and built by me" /> */}
        <link rel="icon" href="../favicon.ico" />
      </Head>

      <div className="bg-slate-100 dark:bg-slate-800 border shadow-md rounded-lg space-y-2 p-2">
        <div className="text-sm sm:text-base md:text-lg font-bold text-center">Runs uploaded to Strava since 2014</div>
        <div className="flex flex-col text-sm sm:text-base space-x-2 space-y-2 justify-center items-center sm:flex-row md:space-x-4 md:text-lg sm:space-y-0">
          <div>🏃‍♂️ {run_total_miles.toLocaleString('en-US') + ' miles'}</div>
          <div>⛰️ {run_total_elevation.toLocaleString('en-US') + ' feet'}</div>
          <div>⌛ {run_total_time.toLocaleString('en-US') + ' hours'}</div>
        </div>

        <div className="text-sm sm:text-base md:text-lg text-center">Progress to running around the earth 🌎</div>
        <div className="flex rounded-full bg-gray-200">
          <div className="z-10 shrink-0 h-5 text-sm text-center text-slate-800 rounded-full bg-green-500 dark:text-slate-900" style={{ width: `${earth_percent_complete}%` }}>{earth_percent_complete}%</div>
          <div className="overflow-x-auto z-0 pl-2 text-sm whitespace-nowrap dark:text-slate-900">{earth_miles_to_go} miles to go!</div>
        </div>
      </div>

      <a href="https://rtrt.me/ulink/HOUA/HOU-2023/tracker/R5ACUDJW/focus" className="flex font-bold justify-center my-10 sm:hidden place-self-center whitespace-nowrap" target="_blank" rel="noopener noreferrer">Click me to track my 2023 Houston Marathon splits!</a>

      <div className="text-2xl font-bold my-2">Training Blog</div>

      <div className="space-y-4">
        {posts.map((item) => (
          <BlogPostList key={item.slug} {...item} />
        ))}
      </div>
      <div className="h-12">

      </div>
    </div>
  )
}

export async function getStaticProps() {
  const allPosts = getAllPosts();
  const token = await updateStravaTokens();

  // New tokens recieved now fetch stats data
  const resStats = await fetch(
    'https://www.strava.com/api/v3/athletes/6689392/stats',
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    },
  )

  const stravaStats = await resStats.json()

  return {
    props: {
      stravaStats,
      posts: allPosts.map(({ data, content, slug }) => ({
        ...data,
        date: data.date,
        content,
        slug,
      })),
    },
    revalidate: 7200,
  };
}

function BlogPostList({ slug, title, date, content, description }) {
  return (
    <Link href={`/blog/${slug}`}>
      <div className="border-gray-200 border-2 rounded-lg shadow hover:shadow-md hover:border-green-500 p-4 transition duration-300 ease-in-out">
        <div className="font-bold">
          {title}
        </div>
        <div className="text-slate-500 text-sm">{date}</div>
        <div>{description}</div>
      </div>
    </Link>
  )
}

