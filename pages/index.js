import { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import { serialize } from 'next-mdx-remote/serialize'
import { MDXRemote } from 'next-mdx-remote'
import { getAllPosts } from '../lib/data'

// id:6689392

export default function Home({ posts }) {
  const [data, setData] = useState(null)
  const [isLoading, setLoading] = useState(false)

  // useEffect(() => {
  //   setLoading(true)
  //   fetch('https://www.strava.com/api/v3/athlete',{
  //     headers: {
  //       'Authorization' : 'Bearer TOKEN '
  //     }
  //   })
  //     .then((res) => res.json())
  //     .then((data) => {
  //       setData(data)
  //       setLoading(false)
  //       console.log(data)
  //     })
  // }, [])

  // useEffect(() => {
  //   setLoading(true)
  //   fetch('https://www.strava.com/api/v3/athletes/6689392/stats',{
  //     headers: {
  //       'Authorization' : 'Bearer TOKEN '
  //     }
  //   })
  //     .then((res) => res.json())
  //     .then((data) => {
  //       setData(data)
  //       setLoading(false)
  //       console.log(data)
  //     })
  // }, [])

  return (
    <div className='font-Poppins'>
      <Head>
        <title>Joe's Blog</title>
        <meta name="description" content="Generated by create next app and built by me" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="space-y-4">
        {posts.map((item) => (
          <BlogPostList key={item.slug} {...item} />
        ))}
      </div>

      <div className="flex space-x-1">
        {/* <div>{'Total Runs Uploaded: '+ data.all_run_totals.count}</div>
        <div>{Math.round(data.all_run_totals.distance*0.000621371)+' miles'}</div>
        <div>{Math.round(data.all_run_totals.elevation_gain*3.28084)+ ' feet'}</div> */}
        {/* <div>{data.firstname}</div>
        <div>{data.lastname}</div>
        <div>{'has been a user on Strava since: ' + data.created_at}</div> */}
      </div>



    </div>
  )
}

export async function getStaticProps() {
  const allPosts = getAllPosts();
  return {
    props: {
      posts: allPosts.map(({ data, content, slug}) => ({
        ...data,
        date: data.date,
        content,
        slug,
      })),
    },
  };
}

function BlogPostList({ slug, title, date, content}) {
  return (
    <Link href={`/blog/${slug}`}>
      <div className="border-gray-200 border-2 rounded-lg shadow hover:shadow-md hover:border-green-500 p-4 transition duration-300 ease-in-out">
        <div className="font-bold">
          {title}
        </div>
        <div className="text-slate-500 text-sm">{date}</div>
        <div className='prose'>{content.substr(0,200)}{'...'}</div>
      </div>
    </Link>
  )
}

